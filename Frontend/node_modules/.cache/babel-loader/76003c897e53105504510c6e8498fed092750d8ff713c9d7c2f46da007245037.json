{"ast":null,"code":"var _s = $RefreshSig$();\nimport { createContext, useState, useMemo } from \"react\";\nimport { createTheme } from \"@mui/material/styles\";\nimport { grey } from \"@mui/material/colors\";\nexport const getDesignTokens = mode => ({\n  palette: {\n    mode,\n    ...(mode === \"light\" ? {\n      // palette values for light mode\n      text: {\n        primary: \"#2B3445\"\n      },\n      neutral: {\n        main: \"#64748B\"\n      },\n      favColor: {\n        main: grey[300]\n      }\n    } : {\n      // palette values for dark mode\n      neutral: {\n        main: \"#64748B\"\n      },\n      favColor: {\n        main: grey[800]\n      },\n      text: {\n        primary: \"#fff\"\n      }\n    })\n  }\n});\n\n// context for color mode\nexport const ColorModeContext = /*#__PURE__*/createContext({\n  toggleColorMode: () => {}\n});\nexport const useMode = () => {\n  _s();\n  const [mode, setMode] = useState(localStorage.getItem(\"mode\") ? localStorage.getItem(\"mode\") : \"light\");\n  const colorMode = useMemo(() => ({\n    toggleColorMode: () => setMode(prev => prev === \"light\" ? \"dark\" : \"light\")\n  }), []);\n  const theme = useMemo(() => createTheme(getDesignTokens(mode)), [mode]);\n  return [theme, colorMode];\n};\n_s(useMode, \"D94o7Vz9f4Gm9A1LTw/nUnE1vS0=\");","map":{"version":3,"names":["createContext","useState","useMemo","createTheme","grey","getDesignTokens","mode","palette","text","primary","neutral","main","favColor","ColorModeContext","toggleColorMode","useMode","_s","setMode","localStorage","getItem","colorMode","prev","theme"],"sources":["D:/vs/Event Booking System/Frontend/src/theme.js"],"sourcesContent":["import { createContext, useState, useMemo } from \"react\";\r\nimport { createTheme } from \"@mui/material/styles\";\r\nimport { grey } from \"@mui/material/colors\";\r\n\r\nexport const getDesignTokens = (mode) => ({\r\n  palette: {\r\n    mode,\r\n    ...(mode === \"light\"\r\n      ? {\r\n          // palette values for light mode\r\n          text: {\r\n            primary: \"#2B3445\",\r\n          },\r\n          neutral: {\r\n            main: \"#64748B\",\r\n          },\r\n\r\n          favColor: {\r\n            main: grey[300],\r\n          },\r\n        }\r\n      : {\r\n          // palette values for dark mode\r\n          neutral: {\r\n            main: \"#64748B\",\r\n          },\r\n\r\n          favColor: {\r\n            main: grey[800],\r\n          },\r\n          text: {\r\n            primary: \"#fff\",\r\n          },\r\n        }),\r\n  },\r\n});\r\n\r\n// context for color mode\r\nexport const ColorModeContext = createContext({\r\n  toggleColorMode: () => {},\r\n});\r\n\r\nexport const useMode = () => {\r\n  const [mode, setMode] = useState(\r\n    localStorage.getItem(\"mode\") ? localStorage.getItem(\"mode\") : \"light\"\r\n  );\r\n\r\n  const colorMode = useMemo(\r\n    () => ({\r\n      toggleColorMode: () =>\r\n        setMode((prev) => (prev === \"light\" ? \"dark\" : \"light\")),\r\n    }),\r\n    []\r\n  );\r\n\r\n  const theme = useMemo(() => createTheme(getDesignTokens(mode)), [mode]);\r\n  return [theme, colorMode];\r\n};\r\n"],"mappings":";AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AACxD,SAASC,WAAW,QAAQ,sBAAsB;AAClD,SAASC,IAAI,QAAQ,sBAAsB;AAE3C,OAAO,MAAMC,eAAe,GAAIC,IAAI,KAAM;EACxCC,OAAO,EAAE;IACPD,IAAI;IACJ,IAAIA,IAAI,KAAK,OAAO,GAChB;MACE;MACAE,IAAI,EAAE;QACJC,OAAO,EAAE;MACX,CAAC;MACDC,OAAO,EAAE;QACPC,IAAI,EAAE;MACR,CAAC;MAEDC,QAAQ,EAAE;QACRD,IAAI,EAAEP,IAAI,CAAC,GAAG;MAChB;IACF,CAAC,GACD;MACE;MACAM,OAAO,EAAE;QACPC,IAAI,EAAE;MACR,CAAC;MAEDC,QAAQ,EAAE;QACRD,IAAI,EAAEP,IAAI,CAAC,GAAG;MAChB,CAAC;MACDI,IAAI,EAAE;QACJC,OAAO,EAAE;MACX;IACF,CAAC;EACP;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMI,gBAAgB,gBAAGb,aAAa,CAAC;EAC5Cc,eAAe,EAAEA,CAAA,KAAM,CAAC;AAC1B,CAAC,CAAC;AAEF,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACV,IAAI,EAAEW,OAAO,CAAC,GAAGhB,QAAQ,CAC9BiB,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,GAAGD,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,GAAG,OAChE,CAAC;EAED,MAAMC,SAAS,GAAGlB,OAAO,CACvB,OAAO;IACLY,eAAe,EAAEA,CAAA,KACfG,OAAO,CAAEI,IAAI,IAAMA,IAAI,KAAK,OAAO,GAAG,MAAM,GAAG,OAAQ;EAC3D,CAAC,CAAC,EACF,EACF,CAAC;EAED,MAAMC,KAAK,GAAGpB,OAAO,CAAC,MAAMC,WAAW,CAACE,eAAe,CAACC,IAAI,CAAC,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EACvE,OAAO,CAACgB,KAAK,EAAEF,SAAS,CAAC;AAC3B,CAAC;AAACJ,EAAA,CAfWD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}